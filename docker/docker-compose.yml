services:
    # The postgres database container.
    postgres:
        # The postgres container is built by us so that we can include
        # the setup script for database initialisation.
        build: ./postgres
        environment:
            # The password for the postgres user (not indicia user)
            POSTGRES_PASSWORD: password
        volumes:
            # Persist the database in a named volume.
            - postgres:/var/lib/postgresql/data
            # Share a host folder so postgres can access UKSI data.
            - .:/var/docker
        ports:
            - "5432:5432"

    # A container running pgAdmin to help us examine the database.
    # Accessible on http://localhost:8070
    # Login with the email and password configured below.
    pgadmin:
        # See https://hub.docker.com/r/dpage/pgadmin4/tags
        # for other versions available.
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: pgadmin@example.com
            PGADMIN_DEFAULT_PASSWORD: password
        volumes:
            # Persist configuration in a named volume.
            - pgadmin:/var/lib/pgadmin
        ports: 
            - "8070:80"

    # A fake mail server which allows the warehouse to send emails.
    # Received mail can be viewed at http://localhost:8025
    mailhog:
        image: mailhog/mailhog 
        ports:
            - "8025:8025"

    # The warehouse container.
    # Accessible on http://localhost:8080
    warehouse:
        build: ./warehouse
        # Share the warehouse code between host and container
        volumes:
            - ..:/var/www/html/
        # Apache is configured to run on port 8080 in warehouse/setup.sh  
        ports: 
            - "8080:8080"

    # The Geoserver container
    # Accessible on http://localhost:8090
    geoserver:
        image: docker.osgeo.org/geoserver:2.23.2
        volumes:
            # Persist configuration in a named volume.
            - geoserver:/opt/geoserver_data
        ports:
            - "8090:8080"

    # The ElasticSearch container
    elastic:
        image: docker.elastic.co/elasticsearch/elasticsearch:8.10.4
        environment:
            # The password for the 'elastic' user.
            ELASTIC_PASSWORD: password
            # Devleopment mode, bootstrap checks disabled.
            # Avoids max virtual memory areas vm.max_map_count is too low error.
            discovery.type: single-node
        volumes:
            # Persist indexes in a named volume.
            - elastic:/usr/share/elasticsearch/data
        ports: 
            - "9200:9200"
        deploy:
            resources:
                limits:
                    memory: 1G

    # The Kibana container
    kibana:
        image: docker.elastic.co/kibana/kibana:8.10.4
        environment:
            # The url of the ElasticSearch server.
            ELASTICSEARCH_HOSTS: http://indicia_elastic_1:9200
            ELASTICSEARCH_USERNAME: kibana_system
            ELASTICSEARCH_PASSWORD: password
        ports: 
            - "5601:5601"
        depends_on:
            - elastic

    # The Logstash container
    logstash:
        image: docker.elastic.co/logstash/logstash:8.10.4
        volumes:
            # Persist pipelines in a named volume.
            - elastic:/usr/share/logstash/pipeline/

volumes:
    postgres:
    pgadmin:
    geoserver:
    elastic:
    logstash: