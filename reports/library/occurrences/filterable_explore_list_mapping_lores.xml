<report
    title="Explore occurrences map (standard filters, low resolution)"
    description="A list of occurrences including geometry information designed for mapping output. Output is aggregated
    to grid squares suitable for lower resolution output when zoomed out."
    featured="true"
>
  <query website_filter_field="o.website_id" samples_id_field="o.sample_id" standard_params="occurrences">
  SELECT #columns#
  FROM cache_occurrences_functional o
  JOIN cache_occurrences_nonfunctional onf on onf.id=o.id
  JOIN cache_samples_nonfunctional snf on snf.id=o.sample_id
  JOIN cache_taxa_taxon_lists cttl on cttl.id=o.taxa_taxon_list_id
  LEFT JOIN index_websites_website_agreements canEdit on canEdit.from_website_id=o.website_id
    and canEdit.to_website_id in (#website_ids#) and canEdit.provide_for_editing=true
  #agreements_join#
  #joins#
  WHERE #sharing_filter#
  #idlist#
  </query>
  <params>
    <param name='default_input_form' display='Default input form' default=''
           description='Input form path to use when no other available. Can be used to generate the path in report_grid action links.' />
    <param name="force_default_input_form" display="Force default input form" default="0"
           description="Force the defaault input form to be used instead of the one specified by the record" />
    <param name="sq_size" display="Grid square size" description="Specify either 1000, 2000 or 10000 for the grid square resolution as 1km, 2km or 10km grid" datatype="integer">
      <joins>
        <join value="1000" operator="equal">JOIN map_squares msq on msq.id=o.map_sq_1km_id and (msq.size=1000 or o.sensitive=true)</join>
        <join value="2000" operator="equal">JOIN map_squares msq on msq.id=o.map_sq_2km_id and (msq.size=2000 or o.sensitive=true)</join>
        <join value="10000" operator="equal">JOIN map_squares msq on msq.id=o.map_sq_10km_id and (msq.size=10000 or o.sensitive=true)</join>
      </joins>
    </param>
    <param name="max_sq_size" display="Max square size" description="Specify either 1000, 2000 or 10000 for the max square size to show if low precision grid refs in dataset" datatype="integer" default="">
      <wheres>
        <where value="2000" operator="equal">o.map_sq_2km_id&lt;&gt;o.map_sq_10km_id</where>
        <where value="1000" operator="equal">o.map_sq_1km_id&lt;&gt;o.map_sq_2km_id</where>
      </wheres>
      <joins>
        <join value="10000" operator="equal">JOIN map_squares msq on msq.id=o.map_sq_10km_id and msq.size=10000</join>
      </joins>
    </param>
    <param name="bounds" display="Bounds WKT" description="Well known text for the bounding box to load" datatype="text" default="">
      <where>st_intersects(msq.geom, st_geomfromtext('#bounds#', 900913))</where>
    </param>
  </params>
  <columns>
    <column name='occurrence_id' sql='o.id' on_demand="true" datatype="integer" />
    <column name='source' on_demand="true" datatype="text"
        sql="snf.website_title || ' | ' || case when substring(snf.survey_title from 1 for length(snf.website_title)) = snf.website_title then trim(substring(snf.survey_title from length(snf.website_title)+1)) else snf.survey_title end" />
    <column name='source_id' on_demand="true" datatype="text" sql="o.website_id::varchar || '.' || o.survey_id::varchar" />
    <column name='sample_id' sql='o.sample_id' on_demand="true" datatype="integer" />
    <column name='taxon' sql="cttl.preferred_taxon" on_demand="true" datatype="species" />
    <column name='common' sql="cttl.default_common_name" on_demand="true" datatype="text" />
    <column name='taxon_group' sql='cttl.taxon_group' on_demand="true" datatype="text" />
    <column name='taxon_group_id' sql='o.taxon_group_id' on_demand="true" datatype="integer" />
    <column name='taxa_taxon_list_id' sql='o.taxa_taxon_list_id' on_demand="true" datatype="integer" />
    <column name='location_name' sql='o.location_name' on_demand="true" datatype="text" />
    <column name='entered_sref' on_demand="true" display='Original grid ref' datatype="text" visible="false"
        sql="coalesce(snf.public_entered_sref, regexp_replace(#sample_sref_field#, ',[^ ]', ', ', 'g'), onf.output_sref)" />
    <column name="output_sref" sql="onf.output_sref" on_demand="true" display="Grid ref" datatype="text" />
    <column name='date_start' sql='o.date_start' on_demand="true" visible='false' />
    <column name='date_end' sql='o.date_end' on_demand="true" visible='false' />
    <column name='date_type' sql='o.date_type' on_demand="true" visible='false' />
    <column name='date' on_demand="true" datatype="date" />
    <column name='cache_created_on' sql='o.created_on' on_demand="true" datatype="date" />
    <column name='cache_updated_on' sql='o.updated_on' on_demand="true" />
    <column name='recorder' on_demand="true" sql="CASE WHEN (TRIM(snf.recorders) !~ ' ' AND LENGTH(snf.recorders)>30) THEN 'Recorder' ELSE snf.recorders END" datatype="text" />
    <column name='created_by_id' visible='false' sql='o.created_by_id' on_demand="true" datatype="integer" />
    <column name='input_form' visible="false" on_demand="true" sql="case
    when canEdit.id is null then null
    when o.input_form is null or o.website_id not in (#website_ids#) or #force_default_input_form#=1 then '#default_input_form#'
    else o.input_form
end" datatype="text" />
    <column name="occurrence_ids" visible="false" sql="array_to_string(array_agg(o.id), ',')" aggregate="true" />
    <column name="taxon_meaning_ids" visible="false" sql="array_to_string(array_agg(distinct o.taxon_meaning_id), ',')" aggregate="true" />
    <column name="geom" visible="false" mappable="true" sql="st_astext(case when msq.size > #sq_size# then #sample_geom_field# else msq.geom end)" in_count="true" />
  </columns>
</report>