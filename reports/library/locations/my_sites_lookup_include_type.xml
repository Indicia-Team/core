<?xml version="1.0" encoding="UTF-8"?>

<report title="My Sites Lookup" description="A list of sites I've created, or in a particular type, or in a group's sites. No site summary information returned.">
      <query website_filter_field="lw.website_id">
      SELECT #columns#
      FROM locations l
      LEFT JOIN locations_websites lw ON lw.location_id=l.id AND lw.deleted=false
      LEFT JOIN (groups_locations gl
        JOIN groups g on g.id=gl.group_id and g.deleted=false
        JOIN groups_users gu on gu.group_id=g.id and gu.user_id=#user_id# and gu.pending=false and gu.deleted=false
      ) on gl.location_id=l.id and gl.deleted=false
      #joins#
      WHERE l.deleted=false
      AND #website_filter#
      AND (
        -- include sites the user created
        l.created_by_id=#user_id#
        -- include group sites if we are working within a specific group
        OR gl.group_id in (#group_id#)
        --
        OR l.location_type_id=#location_type_id#
      )
      </query>
      <order_bys>
        <order_by>l.name ASC</order_by>
      </order_bys>
      <params>
        <param name="user_id" display="User ID" description="The warehouse user's ID" datatype="integer" default="0" />
        <param name="group_id" display="Group ID" description="The recording group we are looking up sites for. Can also be a comma separated list." datatype="integer[]" default="0" />
        <param name="location_type_id" display="Location type ID" description="Include sites of this type." datatype="integer" default="0" />
        <param name="q" display="Query" description="Characters to search for" datatype="text" default="">
          <where>to_tsvector('simple', quote_literal(quote_literal(l.name))) @@ to_tsquery('simple', replace(trim(replace(translate('#q#', '():&amp;', ''), '  ', ' ')), ' ', ':* &amp; ') || ':*')</where>
        </param>
      </params>
      <columns>
        <column name="id" visible="false" sql="l.id" unique="true" in_count="true" />
        <column name="name" display="Site Name" sql="l.name" datatype="text" />
        <column name="created_by_user" visible="false" sql="CASE l.created_by_id WHEN #user_id# THEN true ELSE false END" />
      </columns>
</report>