<report title="Osiris tabular" description="Tabular output for Osiris.">
  <query website_filter_field="o.website_id">
    select '1.bb' as category,
      t_bb.term as broad_biotope, t_bb.id as bb_id,
      null::varchar as specific_biotope, null::integer as sb_id,
      null::varchar as resource, null::integer as r_id,
      null::integer as parent_r_id,
      count(o.preferred_taxa_taxon_list_id) as count,
      count(o.preferred_taxa_taxon_list_id) * 100 / (
        select count(osub.id) from cache_samples_functional ssub
        join cache_occurrences_functional osub
        on osub.website_id=ssub.website_id and osub.survey_id=ssub.survey_id and osub.sample_id=ssub.id
        where ssub.id=#sample_id#
      ) as return
    from cache_samples_functional s
    join cache_occurrences_functional o on o.website_id=s.website_id and o.survey_id=s.survey_id and o.sample_id=s.id
    join cache_taxa_taxon_lists ttl on ttl.id=o.preferred_taxa_taxon_list_id
    join taxa_taxon_list_attribute_values av_bb on av_bb.taxa_taxon_list_id=ttl.id and av_bb.deleted=false
      and av_bb.taxa_taxon_list_attribute_id=#bb_attr_id#
    join cache_termlists_terms t_bb on t_bb.id=av_bb.int_value
    where s.id=#sample_id#
    group by t_bb.term, t_bb.id
    union
    select '2.sb' as category,
      t_bb.term as broad_biotope, t_bb.id as bb_id,
      t_sb.term as specific_biotope, t_sb.id as sb_id,
      null::varchar as resource, null::integer as r_id,
      null::integer as parent_r_id,
      count(o.preferred_taxa_taxon_list_id) as count,
      count(o.preferred_taxa_taxon_list_id) * 100 / (
        select count(osub.id) from cache_samples_functional ssub
        join cache_occurrences_functional osub
        on osub.website_id=ssub.website_id and osub.survey_id=ssub.survey_id and osub.sample_id=ssub.id
        where ssub.id=#sample_id#
      ) as return
    from cache_samples_functional s
    join cache_occurrences_functional o on o.website_id=s.website_id and o.survey_id=s.survey_id and o.sample_id=s.id
    join cache_taxa_taxon_lists ttl on ttl.id=o.preferred_taxa_taxon_list_id
    join taxa_taxon_list_attribute_values av_bb on av_bb.taxa_taxon_list_id=ttl.id and av_bb.deleted=false
      and av_bb.taxa_taxon_list_attribute_id=#bb_attr_id#
    join cache_termlists_terms t_bb on t_bb.id=av_bb.int_value
    join taxa_taxon_list_attribute_values av_sb on av_sb.taxa_taxon_list_id=ttl.id and av_sb.deleted=false
      and av_sb.taxa_taxon_list_attribute_id=#sb_attr_id#
    join cache_termlists_terms t_sb on t_sb.id=av_sb.int_value and t_sb.parent_id=t_bb.id
    join cache_termlists_terms p on p.id=t_sb.parent_id
    where s.id=#sample_id#
    group by t_bb.term, t_bb.id, t_sb.term, t_sb.id
    union
    select '3.r' as category,
      t_bb.term as broad_biotope, t_bb.id as bb_id,
      t_sb.term as specific_biotope, t_sb.id as sb_id,
      t_r.term as resource, t_r.id as r_id,
      case when gp.id is not null and gp.parent_id is null then 0 else t_r.parent_id end as parent_r_id,
      count(o.preferred_taxa_taxon_list_id) as count,
      count(o.preferred_taxa_taxon_list_id) * 100 / (
        select count(osub.id) from cache_samples_functional ssub
        join cache_occurrences_functional osub
        on osub.website_id=ssub.website_id and osub.survey_id=ssub.survey_id and osub.sample_id=ssub.id
        where ssub.id=#sample_id#
      ) as return
    from cache_samples_functional s
    join cache_occurrences_functional o on o.website_id=s.website_id and o.survey_id=s.survey_id and o.sample_id=s.id
    join cache_taxa_taxon_lists ttl on ttl.id=o.preferred_taxa_taxon_list_id
    join taxa_taxon_list_attribute_values av_bb on av_bb.taxa_taxon_list_id=ttl.id and av_bb.deleted=false
      and av_bb.taxa_taxon_list_attribute_id=#bb_attr_id#
    join cache_termlists_terms t_bb on t_bb.id=av_bb.int_value
    join taxa_taxon_list_attribute_values av_sb on av_sb.taxa_taxon_list_id=ttl.id and av_sb.deleted=false
      and av_sb.taxa_taxon_list_attribute_id=#sb_attr_id#
    join cache_termlists_terms t_sb on t_sb.id=av_sb.int_value and t_sb.parent_id=t_bb.id
    join taxa_taxon_list_attribute_values av_r on av_r.taxa_taxon_list_id=ttl.id and av_r.deleted=false
      and av_r.taxa_taxon_list_attribute_id=#r_attr_id#
    join cache_termlists_terms t_r on t_r.id=av_r.int_value
    join cache_termlists_terms p on p.id=t_r.parent_id and (p.parent_id=t_sb.id or t_r.parent_id=t_sb.id)
    join cache_termlists_terms gp on gp.id=p.parent_id
    and (p.id=t_sb.id or gp.id=t_sb.id)
    where s.id=#sample_id#
    group by t_bb.term, t_bb.id, t_sb.term, t_sb.id, t_r.term, t_r.id, t_r.parent_id, gp.id, p.id
  </query>
  <order_bys>
    <order_by>category, broad_biotope, specific_biotope, parent_r_id, count desc</order_by>
  </order_bys>
  <params>
    <param name='sample_id' display='Sample ID'  datatype='integer'/>
    <param name='bb_attr_id' display='Broad biotope attribute ID' datatype='integer'/>
    <param name='sb_attr_id' display='Specific biotope attribute ID' datatype='integer'/>
    <param name='r_attr_id' display='Resource attribute ID' datatype='integer'/>
  </params>
</report>