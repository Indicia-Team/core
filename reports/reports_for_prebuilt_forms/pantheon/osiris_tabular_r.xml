<report title="Osiris tabular resources" description="Tabular output for Osiris.">
  <query website_filter_field="o.website_id">
    select #columns#
    from (
      select t_r.id as "id",
        s.id as "sample_id",
        t_r.id as "term_id",
        case when p.id=t_sb.id then 0 else t_r.parent_id end as "parent_r_id",
        t_bb.term as "bb_term",
        t_sb.term as "sb_term",
        case when p.id=t_sb.id then '' else '&lt;span&gt;' || p.term || '&lt;/span&gt; &gt;&gt; ' end || '&lt;span&gt;' || t_r.term || '&lt;/span&gt;' as "term",
        count(distinct o.preferred_taxa_taxon_list_id) as "speciescount",
        count(distinct o.preferred_taxa_taxon_list_id)::float * 100 / (
          select count(distinct ttlsub.preferred_taxa_taxon_list_id)
          from cache_taxa_taxon_lists ttlsub
          join taxa_taxon_list_attribute_values avsub
            on avsub.taxa_taxon_list_id=ttlsub.id
            and avsub.taxa_taxon_list_attribute_id=#r_attr_id#
            and avsub.int_value=t_r.id
      ) as "rep",
      string_agg(coalesce(td.code, td.abbreviation), '|' order by td.code) as "cons"
      from cache_samples_functional s
      join cache_occurrences_functional o on o.website_id=s.website_id and o.survey_id=s.survey_id and o.sample_id=s.id
      join taxa_taxon_lists ttl on ttl.id=o.preferred_taxa_taxon_list_id
      join taxa_taxon_list_attribute_values av_bb on av_bb.taxa_taxon_list_id=ttl.id and av_bb.deleted=false
        and av_bb.taxa_taxon_list_attribute_id=#bb_attr_id#
      join cache_termlists_terms t_bb on t_bb.id=av_bb.int_value
      join taxa_taxon_list_attribute_values av_sb on av_sb.taxa_taxon_list_id=ttl.id and av_sb.deleted=false
        and av_sb.taxa_taxon_list_attribute_id=#sb_attr_id#
      join cache_termlists_terms t_sb on t_sb.id=av_sb.int_value and t_sb.parent_id=t_bb.id
      join taxa_taxon_list_attribute_values av_r on av_r.taxa_taxon_list_id=ttl.id and av_r.deleted=false
        and av_r.taxa_taxon_list_attribute_id=#r_attr_id#
      join cache_termlists_terms t_r on t_r.id=av_r.int_value
      join cache_termlists_terms p on p.id=t_r.parent_id and (p.parent_id=t_sb.id or t_r.parent_id=t_sb.id)
      left join taxa_taxon_designations ttd on ttd.taxon_id=ttl.taxon_id and ttd.deleted=false
      left join taxon_designations td on td.id=ttd.taxon_designation_id and td.deleted=false
      where s.id=#sample_id#
      group by t_r.id, s.id, t_r.id, case when p.id=t_sb.id then 0 else t_r.parent_id end, t_bb.term, t_sb.term,
        case when p.id=t_sb.id then '' else '&lt;span&gt;' || p.term || '&lt;/span&gt; &gt;&gt; ' end || '&lt;span&gt;' || t_r.term || '&lt;/span&gt;'
    ) as sub
  </query>
  <order_bys>
    <order_by>count desc</order_by>
  </order_bys>
  <params>
    <param name='sample_id' display='Sample ID'  datatype='integer'/>
    <param name='bb_attr_id' display='Broad biotope attribute ID' datatype='integer'/>
    <param name='sb_attr_id' display='Specific biotope attribute ID' datatype='integer'/>
    <param name='r_attr_id' display='Resource attribute ID' datatype='integer'/>
  </params>
  <columns>
    <column name="id" sql="id" visible="false" in_count="true" />
    <column name="sample_id" sql="sample_id" visible="false" />
    <column name="term_id" sql="term_id" visible="false" />
    <column name="parent_r_id" visible="false" sql="parent_r_id" />
    <column name="bb_term" sql="bb_term" display="Broad biotope" />
    <column name="sb_term" sql="sb_term" display="Specific biotope" />
    <column name="term" display="Resource" sql="term" />
    <column name="count" sql="speciescount" display="Count" />
    <column name="rep" display="% representation" sql="case when sub.rep&lt;1 then '&lt;1' else round(sub.rep)::varchar end" />
    <column name="cons" display="Conservation status" sql="cons" />
  </columns>
</report>