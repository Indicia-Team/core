<?php

/**
 * @file
 * View template for the occurrence comment edit form.
 *
 * Indicia, the OPAL Online Recording Toolkit.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * any later version.
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see http://www.gnu.org/licenses/gpl.html.
 *
 * @author Indicia Team
 * @license http://www.gnu.org/licenses/gpl.html GPL
 * @link https://github.com/indicia-team/warehouse
 */

warehouse::loadHelpers(['data_entry_helper']);
$id = html::initial_value($values, 'occurrence_comment:id');
?>
<p>This page allows you to specify the details of an occurrence comment.</p>
<form id="entry_form" action="<?php echo url::site() . 'occurrence_comment/save'; ?>" method="post">
  <fieldset>
    <input type="hidden" name="occurrence_comment:id" value="<?php echo $id ?>" />
    <input type="hidden" name="occurrence_comment:occurrence_id" value="<?php echo html::initial_value($values, 'occurrence_comment:occurrence_id'); ?>" />
    <legend>Occurrence Comment<?php echo $metadata; ?></legend>
    <?php
    if (html::initial_value($values, 'occurrence_comment:auto_generated') === 't') : ?>
      <p>This comment was generated by the auto verification rule
          <?php echo html::initial_value($values, 'occurrence_comment:generated_by') ?>.</p>
    <?php endif;
    echo data_entry_helper::textarea(array(
      'label' => 'Comment',
      'fieldname' => 'occurrence_comment:comment',
      'default' => html::initial_value($values, 'occurrence_comment:comment'),
      'validation' => ['required'],
    ));
    if (!empty(html::initial_value($values, 'occurrence_comment:record_status'))) {
      $status = html::initial_value($values, 'occurrence_comment:record_status')
        . (empty(html::initial_value($values, 'occurrence_comment:record_substatus')) ?
        '' : html::initial_value($values, 'occurrence_comment:record_substatus'));
      switch ($status) {
        case 'V':
          $action = 'accepted';
          break;

        case 'V1':
          $action = 'accepted as correct';
          break;

        case 'V2':
          $action = 'accepted as correct';
          break;

        case 'C3':
          $action = 'plausible';
          break;

        case 'D':
          $action = 'queried';
          break;

        case 'R':
          $action = 'not accepted';
          break;

        case 'R4':
          $action = 'not accepted as unable to verify';
          break;

        case 'R5':
          $action = 'not accepted as incorrect';
          break;

        default:
          $action = $status;
      }
      switch (html::initial_value($values, 'occurrence_comment:record_status')) {
        case 'V':
          $alert = 'success';
          break;

        case 'R':
          $alert = 'danger';
          break;

        default:
          $alert = 'info';
      }
      echo "<p class=\"alert alert-$alert\">Reviewer set the record status to <strong>$action</strong>.</p>";
    }
    if (html::initial_value($values, 'occurrence_comment:auto_generated') === 'f') {
      echo data_entry_helper::checkbox(array(
        'label' => 'Query',
        'fieldname' => 'occurrence_comment:query',
        'helpText' => 'Does this comment represent a query about the record?',
        'default' => html::initial_value($values, 'occurrence_comment:query')
      ));
    }
    if (!empty(html::initial_value($values, 'occurrence_comment:correspondence_data'))) {
      $correspondence = json_decode($values['occurrence_comment:correspondence_data'], TRUE);
      foreach ($correspondence as $type => $list) {
        echo '<table class="table table-condensed"><caption>' . ucfirst($type) . '</caption><tbody>';
        foreach ($list as $item) {
          foreach ($item as $key => $value) {
            echo "<tr><th scope=\"row\">$key</th><td><pre>$value</pre></td></tr>";
          }
        }
        echo '</tbody></table>';
      }
    }
    echo data_entry_helper::text_input(array(
      'label' => 'Reference or other external source information',
      'fieldname' => 'occurrence_comment:reference',
      'default' => html::initial_value($values, 'occurrence_comment:reference'),
    ));
    ?>
  </fieldset>
  <?php
  echo html::form_buttons($id != NULL, FALSE, FALSE);
  data_entry_helper::enable_validation('entry_form');
  echo data_entry_helper::dump_javascript();
  ?>
</form>
